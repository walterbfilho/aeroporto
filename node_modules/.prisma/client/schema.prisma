// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aviao {
  id           Int           @id @default(autoincrement())
  modelo       String
  Funcionarios Funcionario[]
  Voos         Voo[]
}

model Passageiro {
  cpf      String    @id
  Nome     String
  Reservas Reserva[]
}

model Funcionario {
  cpf         String @id
  Nome        String
  cargo       String
  fk_Aviao_id Int
  Aviao       Aviao  @relation(fields: [fk_Aviao_id], references: [id], onDelete: Restrict)
}

model Destinos {
  id    Int    @id @default(autoincrement())
  local String
  Voos  Voo[]

  @@unique([local, id])
}

model Voo {
  id             Int       @id @default(autoincrement())
  fk_Destinos_id Int
  fk_Aviao_id    Int
  Destinos       Destinos  @relation(fields: [fk_Destinos_id], references: [id], onDelete: Cascade)
  Aviao          Aviao     @relation(fields: [fk_Aviao_id], references: [id], onDelete: Cascade)
  Reservas       Reserva[]
}

model Reserva {
  fk_voo_id         Int
  fk_passageiro_cpf String
  Voo               Voo        @relation(fields: [fk_voo_id], references: [id])
  Passageiro        Passageiro @relation(fields: [fk_passageiro_cpf], references: [cpf])

  @@id([fk_voo_id, fk_passageiro_cpf])
}
